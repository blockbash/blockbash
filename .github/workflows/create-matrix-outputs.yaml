# ##############################################################################
# PURPOSE: Merges artifact outputs from matrix jobs
# + Primary Input: Files within $publish_images_matrix_outputs_pre
# + Primary Output: Files within $publish_images_matrix_outputs_post
# #############################################################################

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      is_enabled:
        required: true
        type: string
      primary_json_string:
        required: true
        type: string

jobs:
  create_matrix_outputs:
    # null_environment: Leveraged in workflows that don't leverage any external secrets.  In this case, the environment makes sure that the workflow file can only be leveraged on a protected branch.
    environment: null_environment
    runs-on: ubuntu-22.04
    steps:
      - id: "null"
        if: ${{ false }}
        # language=sh
        run: |
          # Hacky way for GITHUB WORKFLOW plugin to recognize GITHUB_ENV
          # echo "build_scripts_workflow_steps_dir_path=null" >> $GITHUB_ENV
          # echo "publish_images_matrix_outputs_pre=null" >> $GITHUB_ENV
          # echo "publish_images_matrix_outputs_post=null" >> $GITHUB_ENV
          # echo "build_matrix_outputs_final_dir_path=null" >> $GITHUB_ENV
          # echo "build_matrix_outputs_dir_path=null" >> $GITHUB_ENV
          # echo "build_matrix_outputs_dir_path=null" >> $GITHUB_ENV
        shell: bash
      # See commentary in create-deployment.yaml as to why we are doing this if
      # statement on all job steps
      - if: inputs.is_enabled == 'true'
        name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - if: inputs.is_enabled == 'true'
        name: Job Init
        uses: ./.github/workflows/composite-actions/job-init
        with:
          primary_json_string: ${{ inputs.primary_json_string }}
      - if: inputs.is_enabled == 'true'
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.publish_images_matrix_outputs_pre }}
          path: ${{ env.build_matrix_outputs_dir_path }}
      - id: create_matrix_outputs
        if: inputs.is_enabled == 'true'
        name: Executing create-matrix-outputs.sh
        # language=sh
        run: |
          bash '${{ env.build_scripts_workflow_steps_dir_path }}/create-matrix-outputs.sh'
      - if: inputs.is_enabled == 'true'
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: ${{ env.publish_images_matrix_outputs_post }}
          path: ${{ env.build_matrix_outputs_final_dir_path }}
          retention-days: 1
      - id: cleanup_actions
        if: inputs.is_enabled == 'true' && always()
        name: Execute Cleanup Actions
        # language=sh
        run: |
          bash '${{ env.build_scripts_workflow_steps_dir_path }}/cleanup-job.sh' \
            --is_docker_build="false"
