# ##############################################################################
# PURPOSE: Create multi-arch container images
# + See documentation within create_matrix_docker_outputs() for more context.
# + Leverages artifacts (publish_images_matrix_outputs_post) generated within create-matrix-outputs job
# ##############################################################################


# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      is_enabled:
        required: true
        type: string
      primary_json_string:
        required: true
        type: string
    secrets:
      _GITHUB_TOKEN:
        required: true

jobs:
  create_multi_arch_images:
    runs-on: ubuntu-22.04
    # null_environment: Leveraged in workflows that don't leverage any external secrets.  In this case, the environment makes sure that the workflow file can only be leveraged on a protected branch.
    environment: "null_environment"
    steps:
      - if: ${{ false }}
        shell: bash
        id: "null"
        # language=sh
        run: |
          # Hacky way for GITHUB WORKFLOW plugin to recognize GITHUB_ENV
          # echo "build_scripts_workflow_steps_dir_path=null" >> $GITHUB_ENV
          # echo "publish_images_matrix_outputs_post=null" >> $GITHUB_ENV
          # echo "build_matrix_outputs_final_dir_path=null" >> $GITHUB_ENV
      # See commentary in create-deployment.yaml as to why we are doing this if
      # statement on all job steps
      - if: inputs.is_enabled == 'true'
        name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - if: inputs.is_enabled == 'true'
        name: Job Init
        uses: ./.github/workflows/composite-actions/job-init
        with:
          _github_token: ${{ secrets._GITHUB_TOKEN }}
          primary_json_string: ${{ inputs.primary_json_string }}
      - if: inputs.is_enabled == 'true'
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.publish_images_matrix_outputs_post }}
          path: ${{ env.build_matrix_outputs_final_dir_path }}
      - id: create_multi_arch_images
        if: inputs.is_enabled == 'true'
        name: Execute create-multi-arch-images.sh
        # language=sh
        run: |
          bash '${{ env.build_scripts_workflow_steps_dir_path }}/create-multi-arch-images.sh' \
          --should_publish=${should_publish} \
          --should_publish_images=${should_publish_images}
      - id: cleanup_actions
        if: inputs.is_enabled == 'true' && always()
        name: Execute Cleanup Actions
        # language=sh
        run: |
          bash '${{ env.build_scripts_workflow_steps_dir_path }}/cleanup-job.sh' \
            --is_docker_build="false"
