#!/usr/bin/env bash
#shellcheck shell=bash

# ##############################################################################
: << COMMENT

DEPS: Sourcing logic must set:
  * _prepend_dir_path: Helpful in situations where all paths should be absolute.
  Any value that leverages prepend_dir_path should NOT add a /
  * _blockbash_root_dir_path

If a path is needed VERY early in the init process, it is set within
source-init.sh.  Examples:
  * logs_dir_path
  * bash_log_file_path
  * local_config_dir_path

In the local environment, the values in this file can be overridden via 'utils/local-config/overrides.env'.  See "Configuration Overrides" within README.md for more context.

IMPORTANT:
  * IF YOU ARE CREATING A DIRECTORY/FILE THAT HOUSES SENSITIVE INFORMATION, PLEASE DELETE IT WITHIN cleanup-job.sh
  * If you are updating a path, please ensure the container_* variant is updated (as well).

COMMENT

###############################################################################
# MISC TUTORIAL PATHS
###############################################################################

attacker_contract_name="Attacker"
attacker_solution_contract_name_prefix="${attacker_contract_name}SolutionPattern"
attacker_file_name="${attacker_contract_name}.sol"

vulnerable_contract_name="Vulnerable"
vulnerable_solution_contract_name_prefix="${vulnerable_contract_name}SolutionPattern"
vulnerable_solution_pattern_0_contract_name="${vulnerable_solution_contract_name_prefix}0"
vulnerable_file_name="${vulnerable_contract_name}.sol"

reentrancy_fundamentals_dir_name="reentrancy-fundamentals"
reentrancy_fundamentals_file_name_prefix="reentrancyFundamentals"

###############################################################################
# MISC FILES/DIRECTORIES
###############################################################################
gitkeep_file_name=".gitkeep"

###############################################################################
# DEV ENV HOST PATHS
###############################################################################
host_act_dir_path="${HOME}/.act"
host_act_artifact_dir_path="${host_act_dir_path}/artifacts"
host_act_action_cache_dir_path="${host_act_dir_path}/action_cache"
host_act_cache_server_dir_path="${host_act_dir_path}/cache_server"

###############################################################################
# ROOT AND PRIMARY CHILDREN PATHS
###############################################################################
blockbash_root_dir_path="${_blockbash_root_dir_path}"
apps_dir_path="${_prepend_dir_path}apps"
packages_dir_path="${_prepend_dir_path}packages"
utils_dir_path="${_prepend_dir_path}utils"
bin_dir_path="${_prepend_dir_path}bin"
github_dir_path="${_prepend_dir_path}.github"
# vscode_devcontainer_dir_path: Helps local development
vscode_devcontainer_dir_path="${_prepend_dir_path}.devcontainer"
gitignore_file_path="${_prepend_dir_path}.gitignore"
aider_dir_path="${_prepend_dir_path}.aider"

# ##############################################################################
# aider
# ##############################################################################
aider_input_history_file_path="${aider_dir_path}/.aider.input.history"
aider_chat_history_file_path="${aider_dir_path}/.aider.chat.history.md"
aider_llm_history_file_path="${aider_dir_path}/.aider.llm.history"

# ##############################################################################
# UTILS
# ##############################################################################
utils_local_config_dir_path="${utils_dir_path}/local-config"
utils_commands_dir_path="${utils_dir_path}/scripts/commands"
utils_ai_dir_path="${utils_dir_path}/ai"
utils_ai_global_context_dir_path="${utils_ai_dir_path}/global-context"
utils_ai_context_dir_path="${utils_ai_dir_path}/context"

# ##############################################################################
# DEVCONTAINER
#   + Not all devcontainer paths are in this section.
#   + If other apps/packages use devcontainer paths, those paths will be declared in the respective app/package section (within this file).
# ##############################################################################
build_time_prefix="build-time"
run_time_prefix="run-time"
devcontainer_file_name="devcontainer.json"
devcontainer_hidden_file_name=".${devcontainer_file_name}"
build_time_devcontainer_file_name="${build_time_prefix}.${devcontainer_file_name}"
run_time_devcontainer_file_name="${run_time_prefix}.${devcontainer_file_name}"
# vscode_devcontainer_file_path: This is leveraged (in the local environment) to emulate the vscode devcontainer experience.
run_time_vscode_devcontainer_file_path="${vscode_devcontainer_dir_path}/${devcontainer_file_name}"

###############################################################################
# ESLINT PACKAGE
###############################################################################
eslint_dir_path="${packages_dir_path}/eslint-config-ts"

###############################################################################
# COMMON PACKAGE
###############################################################################
common_dir_path="${packages_dir_path}/common"
common_config_dir_path="${common_dir_path}/config"
common_scripts_dir_path="${common_dir_path}/scripts"
common_scripts_init_dir_path="${common_scripts_dir_path}/init"
common_scripts_jq_dir_path="${common_scripts_dir_path}/jq"

###############################################################################
# LAB-SHELL APP
###############################################################################

# IMPORTANT: There are container_* variants of these values within the "Container Paths"
# section.
solhint_file_name=".solhint"

lab_shell_dir_path="${apps_dir_path}/lab-shell"
lab_shell_scripts_dir_path="${lab_shell_dir_path}/scripts"
lab_shell_config_dir_path="${lab_shell_dir_path}/config"
lab_shell_solhint_file_path="${lab_shell_config_dir_path}/${solhint_file_name}"

lab_shell_scripts_hooks_dir_path="${lab_shell_scripts_dir_path}/hooks"
lab_shell_scripts_aliases_dir_path="${lab_shell_scripts_dir_path}/aliases"
lab_shell_config_vscode_dir_path="${lab_shell_config_dir_path}/.vscode"

###############################################################################
# LAB-CORE APP
###############################################################################
# IMPORTANT: There are container_* variants of these values within the "Container Paths"
# section.

lab_core_dir_path="${apps_dir_path}/lab-core"
lab_core_outputs_dir_path="${lab_core_dir_path}/outputs"
lab_core_outputs_traces_dir_path="${lab_core_outputs_dir_path}/hardhat-tracer"
lab_core_outputs_slither_dir_path="${lab_core_outputs_dir_path}/slither"

lab_core_artifacts_dir_path="${lab_core_dir_path}/artifacts"
lab_core_diffs_dir_path="${lab_core_artifacts_dir_path}/diffs"
lab_core_diffs_contracts_dir_path="${lab_core_diffs_dir_path}/contracts"
lab_core_diffs_slither_dir_path="${lab_core_diffs_dir_path}/slither"

lab_core_contracts_dir_path="${lab_core_dir_path}/contracts"
lab_core_reentrancy_fundamentals_contracts_dir_path="${lab_core_contracts_dir_path}/${reentrancy_fundamentals_dir_name}"

lab_core_challenge_groups_dir_path="${lab_core_dir_path}/challenge-groups"
backup_stem="_backup"
lab_core_contracts_backup_dir_path="${lab_core_contracts_dir_path}${backup_stem}"
lab_core_compilers_dir_path="${lab_core_artifacts_dir_path}/compilers"
lab_core_compilers_solc_symlink_file_path="${lab_core_compilers_dir_path}/solc"
# lab_core_compilers_solcjs_symlink_file_path: Should reflect structure of compilerPath within hardhat.config.js
lab_core_compilers_solcjs_symlink_file_path="${lab_core_compilers_dir_path}/solcjs"
lab_core_attack_lab_default_additional_symlinked_relative_file_paths="shared/EventsBase.sol,shared/VulnerableBase.sol,shared/AttackerBase.sol"
lab_core_defend_lab_default_additional_symlinked_relative_file_paths="shared/EventsBase.sol,shared/VulnerableBase.sol"
###############################################################################
# WEBSITE APP
###############################################################################
website_dir_path="${apps_dir_path}/website"
website_bin_dir_path="${website_dir_path}/node_modules/.bin"
website_artifacts_dir_path="${website_dir_path}/artifacts"
website_artifacts_build_dir_path="${website_artifacts_dir_path}/build"
website_artifacts_docusaurus_dir_path="${website_artifacts_dir_path}/.docusaurus"

###############################################################################
# BUILD APP
###############################################################################
# IMPORTANT: There are container_* variants of these values within the "Container build"
# section.

build_dir_path="${apps_dir_path}/build"
build_bin_dir_path="${build_dir_path}/node_modules/.bin"

# build scripts
build_scripts_dir_path="${build_dir_path}/scripts"
build_scripts_act_dir_path="${build_scripts_dir_path}/act"
build_scripts_actions_dir_path="${build_scripts_dir_path}/actions"
build_scripts_workflow_steps_dir_path="${build_scripts_actions_dir_path}/steps"
build_scripts_config_dir_path="${build_scripts_dir_path}/config"
build_script_global_config_file_path="${build_scripts_config_dir_path}/global.env"

# build templates
build_templates_dir_path="${build_dir_path}/templates"
build_run_time_devcontainer_template_file_path="${build_templates_dir_path}/${run_time_prefix}.devcontainer.template.json"
build_build_time_devcontainer_base_template_file_path="${build_templates_dir_path}/${build_time_prefix}.devcontainer.base.template.json"

# build artifacts
cosign_prefix="cosign"
cosign_key_file_name="${cosign_prefix}.key"
cosign_pub_file_name="${cosign_prefix}.pub"
cosign_password_file_name="${cosign_prefix}.password"
vscode_dir_name=".vscode"
vscode_tasks_file_name="tasks.json"

build_artifacts_dir_path="${build_dir_path}/artifacts"
build_artifacts_dummy_secrets_dir_path="${build_artifacts_dir_path}/dummy-secrets"
build_artifacts_dummy_cosign_key_file_path="${build_artifacts_dummy_secrets_dir_path}/${cosign_key_file_name}"
build_artifacts_dummy_cosign_pub_file_path="${build_artifacts_dummy_secrets_dir_path}/${cosign_pub_file_name}"
build_artifacts_dummy_cosign_password_file_path="${build_artifacts_dummy_secrets_dir_path}/${cosign_password_file_name}"

build_artifacts_labs_dir_path="${build_artifacts_dir_path}/labs"
build_artifacts_lab_tasks_file_path="${build_artifacts_labs_dir_path}/${vscode_tasks_file_name}"
# build_artifacts_lab_specific_dir_path: Needs to be in sync with container_build_artifacts_lab_specific_dir_path
build_artifacts_lab_specific_dir_path="${build_artifacts_labs_dir_path}/lab-specific"
# build_artifacts_labs_metadata_file_path: Needs to be in sync with constants.fullConfig.ts and packages/common/src/tutorial-configs/types.ts
build_artifacts_labs_metadata_file_path="${build_artifacts_labs_dir_path}/merged-metadata.json"

build_matrix_outputs_dir_path="${build_artifacts_dir_path}/matrix-outputs"
build_matrix_outputs_raw_dir_path="${build_matrix_outputs_dir_path}/raw"
build_matrix_outputs_final_dir_path="${build_matrix_outputs_dir_path}/final"
build_matrix_outputs_scratch_dir_path="${build_matrix_outputs_dir_path}/scratch"

build_artifacts_security_tools_dir_path="${build_artifacts_dir_path}/security-tools"
build_security_tools_debs_dir_path="${build_artifacts_security_tools_dir_path}/debs"
build_security_tools_grype_dir_path="${build_artifacts_security_tools_dir_path}/grype"
build_security_tools_grype_db_dir_path="${build_security_tools_grype_dir_path}/db"
build_security_tools_grype_sbom_dir_path="${build_security_tools_grype_dir_path}/sbom"
build_security_tools_grype_sbom_file_path="${build_security_tools_grype_sbom_dir_path}/sbom.spdx"

# build devcontainer
build_devcontainer_dir_path="${build_dir_path}/devcontainer"
build_lab_environments_dir_path="${build_devcontainer_dir_path}/lab-environments"

# build dockerfiles
build_dockerfiles_dir_path="${build_dir_path}/dockerfiles"
build_dockerfile_primary_file_path="${build_dockerfiles_dir_path}/Dockerfile-primary"

# ##############################################################################
# SHARED CONTAINER/RUNNER PATHS
# (container == lab env)
# ##############################################################################
shared_pnpm_root_dir_path="${HOME}/pnpm"
shared_pnpm_store_dir_path="${shared_pnpm_root_dir_path}/store"

###############################################################################
# RUNNER PATHS

# IMPORTANT:
# If you change any of the security_tools paths, you must:
# - update the directory structure (in the repo).  We leverage .gitkeep
# files to help visualize the structure.

# We have distinct glob_patterns as hashFiles(INSERT_PATHS) needs INSERT_PATHS
# to be relative to the GITHUB_WORKSPACE
###############################################################################

runner_execution_environment_workflows_dir_path="${github_dir_path}/workflows"

runner_build_metadata_path="/tmp/build-meta.txt"
runner_secrets_dir_path="$HOME/secrets"
runner_docker_daemon_secret_file_path="${HOME}/.docker/config.json"
runner_github_sync_file=".github/sync.yml"

###############################################################################
# CONTAINER PATHS
# (container == lab env)
###############################################################################

###############################################################################
# CONTAINER ROOT AND PRIMARY CHILDREN PATHS
###############################################################################
container_repo_dir_path=/blockbash
container_apps_dir_path="${container_repo_dir_path}/apps"
container_repo_node_modules_dir_path="${container_repo_dir_path}/node_modules"
# container_logs_dir_path: Added to cleanup-job.sh
container_logs_dir_path="${container_repo_dir_path}/logs"

###############################################################################
# CONTAINER CONFIGS/LOGS
###############################################################################
prettier_config_file_name=".prettierrc"
container_repo_prettier_config_file_path="${container_repo_dir_path}/${prettier_config_file_name}"
container_bash_log_file_path="${container_logs_dir_path}/bash.log"
container_node_log_file_path="${container_logs_dir_path}/node.log"

###############################################################################
# CONTAINER BUILD
###############################################################################
container_build_dir_path="${container_apps_dir_path}/build"
container_build_scripts_dir_path="${container_build_dir_path}/scripts"

###############################################################################
# CONTAINER LAB SHELL
###############################################################################
container_lab_shell_scripts_hooks_dir_path="${container_apps_dir_path}/lab-shell/scripts/hooks"

###############################################################################
# CONTAINER INTERNAL
###############################################################################
container_internal_dir_path=/blockbash-internal
container_remote_devcontainer_dir_path="${container_internal_dir_path}/remote_devcontainer"
container_remote_config_file_path="${container_remote_devcontainer_dir_path}/${devcontainer_hidden_file_name}"
container_state_file_path="${container_internal_dir_path}/state.json"

###############################################################################
# CONTAINER LAB-CORE APP
# container_lab_core_*: These need to be hardcoded as they MUST always resolve
# to one path.
###############################################################################

container_lab_core_dir_path="${container_apps_dir_path}/lab-core"
container_lab_core_outputs_dir_path="${container_lab_core_dir_path}/outputs"
container_lab_core_outputs_slither_dir_path="${container_lab_core_outputs_dir_path}/slither"
container_lab_core_outputs_slither_plain_dir_path="${container_lab_core_outputs_slither_dir_path}/plain"
container_lab_core_outputs_slither_ansi_dir_path="${container_lab_core_outputs_slither_dir_path}/ansi"
container_lab_core_outputs_traces_dir_path="${container_lab_core_outputs_dir_path}/hardhat-tracer"
container_lab_core_contracts_dir_path="${container_lab_core_dir_path}/contracts"
container_lab_core_contracts_backup_dir_path="${container_lab_core_contracts_dir_path}${backup_stem}"
container_lab_core_artifacts_dir_path="${container_lab_core_dir_path}/artifacts"
container_lab_core_compilers_dir_path="${container_lab_core_artifacts_dir_path}/compilers"
container_lab_core_compilers_solc_symlink_file_path="${container_lab_core_compilers_dir_path}/solc"
# container_lab_core_compilers_solcjs_symlink_file_path: Should reflect structure of compilerPath within hardhat.config.js
container_lab_core_compilers_solcjs_symlink_file_path="${container_lab_core_compilers_dir_path}/solcjs"

###############################################################################
# CONTAINER TOOLING
# Container tooling that lives outside of blockbash namespace
###############################################################################
container_svm_dir_path="/root/.svm"
