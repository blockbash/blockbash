#shellcheck shell=bash

# ##############################################################################
: << COMMENT

PURPOSE: Build/orchestration-related config values.
- In the local environment, the values in this file can be overridden via 'utils/local-config/overrides.env'.  See "Configuration Overrides" within README.md for more context.


COMMENT
# ##############################################################################

# ##############################################################################
# GENERAL CONSTANTS
# ##############################################################################
true="true"
false="false"
null="null"
# null_credential: If we leverage a value of "null", act will redact all text that has null in it.
# null_credential: Must be in sync with values within: create-deployment.yaml, job-init/action.yaml default values
null_credential="dummy_cred"

# ##############################################################################
# BASH CLI FLAGS
# ##############################################################################
#jq_common_flags[@]: Need to be in sync with job-init's set_env_vars
jq_common_flags=(
  "--exit-status"
  "--sort-keys"
  "--compact-output"
)

# ##############################################################################
# LOG LEVELS
# ##############################################################################
trace_level="trace"
debug_level="debug"
info_level="info"
warning_level="warn"
error_level="error"
default_level="${info_level}"

###############################################################################
# JSON Keys
###############################################################################
key_create_lab_images_job="create-lab-images"
key_create_base_images_job="create-base-images"

key_codespace_url="codespace_url"
key_build_args=".build.args"
key_blockbash_workspace_dir_path="blockbash_workspace_dir_path"
key_lab_contracts_dir_name="lab_contracts_dir_name"
key_lab_guid_bash="lab_guid_bash"
key_default_challenge_prompt_group_guid_typescript="default_challenge_prompt_group_guid_typescript"
key_default_challenge_solution_group_guid_typescript="default_challenge_solution_group_guid_typescript"
key_lab_release="lab_release"
key_lab_repo_name_full="lab_repo_name_full"
key_container_lab_contracts_dir_path="container_lab_contracts_dir_path"
key_lab_open_relative_file_paths="lab_open_relative_file_paths"
key_lab_additional_symlinked_relative_file_paths="lab_additional_symlinked_relative_file_paths"
key_has_bootstrapped="has_bootstrapped"
key_image_name_short="image_name_short"
key_container_name="container_name"
key_image_name_with_branch_arch_full="image_name_with_branch_arch_full"
key_image_name_with_branch_full="image_name_with_branch_full"
key_initialize_command="initialize_command"
key_remote_devcontainer_file_url="remote_devcontainer_file_url"
key_vscode_url="vscode_url"

###############################################################################
# GIT
###############################################################################
production_branch="main"
develop_branch="develop"
git_user="git"

###############################################################################
# GITHUB
###############################################################################
github_labs_org_name_dev="blockbash-labs-dev"
github_labs_org_app_id_dev="664025"
github_labs_org_name_prod="blockbash-labs"
github_labs_org_app_id_prod="799500"
github_primary_org_name_prod="blockbash"
github_primary_repo_name_prod="blockbash"
github_raw_content_url="https://raw.githubusercontent.com"
github_primary_domain="github.com"
github_url="https://${github_primary_domain}"
github_issue_url="${github_url}/${github_primary_org_name_prod}/${github_primary_repo_name_prod}/issues/new/choose"
github_image_registry_domain="ghcr.io"

###############################################################################
# DOCKER
###############################################################################
docker_lab_base_image_name_short=lab_base
# docker_runner_image_name_short: Add bb- prefix to lower probability of image name collisions.  This image is only leveraged locally.
docker_runner_image_name_short=bb-runner
# docker_runner_image_branch: This is only created locally and the image should be independent of what branch a person is currently on.  In this case, we use "latest" as the "branch name".  This will create the docker tags of "latest" and "latest-INSERT_ARCH_HERE"
docker_runner_image_branch="latest"
docker_act_non_customized_image_full="ghcr.io/catthehacker/ubuntu:act-latest"
docker_arch_linux_x64_name="linux/amd64"
docker_arch_linux_arm64_name="linux/arm64"
docker_cache_to="to"
docker_cache_from="from"
docker_builder_name="bb-builder"

# docker_container_namespace_*: When creating container names, we prefix them with a namespace to help avoid conflicts on the host.
docker_container_namespace_devcontainer="devcontainer"

###############################################################################
# CACHE
###############################################################################
cache_key_security_tools_debs="security_tools_debs"
cache_key_grype="security_tools_grype"
cache_key_pnpm=pnpm_cache_key

###############################################################################
# LAB_ENVIRONMENT
###############################################################################
lab_workflow_devcontainer_vscode="devcontainer-vscode"
lab_local_initialize_command=""

###############################################################################
# CLOUDFLARE
###############################################################################
# Discussion on if you should hide account ids
# https://www.reddit.com/r/aws/comments/bbfmso/comment/ekk0ogi/?utm_source=share&utm_medium=web2x&context=3
# DEV

cloudflare_dev_account_id="98020bfdb6cd654acb846ee390164616"
cloudflare_dev_project_name="blockbash-dev"
# PROD
cloudflare_prod_account_id="d92058d1103e8baaf27b3eeb814d2f2c"
cloudflare_prod_project_name="blockbash"

cloudflare_prod_blockbash_domain="blockbash.xyz"
cloudflare_dev_blockbash_domain="blockbash-dev.pages.dev"

###############################################################################
# SECRETS
###############################################################################
op_dev_scheme="op://blockbash-dev"
op_credential="credential"
# op_personal_scheme: This is the scheme that is used for personal secrets.  This is not used for the "core" blockbash app.  Given this fact, the conventions for these secrets are different.  For example, these secrets aren't base64 encoded, etc.
op_personal_scheme="op://personal-programmatic"
op_anthropic_api_key_url="${op_personal_scheme}/ANTHROPIC/${op_credential}"
op_openai_api_key_url="${op_personal_scheme}/OPENAI/${op_credential}"

secret_cloudflare_token_base64_name="CLOUDFLARE_TOKEN_BASE64"
secret_cosign_key_base64_name="COSIGN_KEY_BASE64"
secret_cosign_password_base64_name="COSIGN_PASSWORD_BASE64"
secret_blockbash_app_private_key_base64_name="BLOCKBASH_APP_PRIVATE_KEY_BASE64"
# _op_github_token: GITHUB TOKEN IS NOT BASE64ed because:
# - it's automatically passed (by github) in a non base64 format.  (This is also why we dont change the GITHUB_TOKEN name)
# - it's leveraged by act for various cloning operations before it is decoded
secret_external_github_token_name="GITHUB_TOKEN"
secret_internal_github_token_name="_${secret_external_github_token_name}"

_op_blockbash_app_private_key_base64="${secret_blockbash_app_private_key_base64_name}/${op_credential}"
op_blockbash_app_private_key_base64_url="${op_dev_scheme}/${_op_blockbash_app_private_key_base64}"

_op_github_token="${secret_external_github_token_name}/${op_credential}"
op_github_token_url="${op_dev_scheme}/${_op_github_token}"

_op_cloudflare_token_base64="${secret_cloudflare_token_base64_name}/${op_credential}"
op_cloudflare_token_base64_url="${op_dev_scheme}/${_op_cloudflare_token_base64}"

_op_cosign_key_base64="${secret_cosign_key_base64_name}/${op_credential}"
op_cosign_key_base64_url="${op_dev_scheme}/${_op_cosign_key_base64}"

_op_cosign_password_base64="${secret_cosign_password_base64_name}/${op_credential}"
op_cosign_password_base64_url="${op_dev_scheme}/${_op_cosign_password_base64}"

# ##############################################################################
# ACT
# ##############################################################################
act_workflow_variant_create_runner_image="create-runner-image"
act_workflow_variant_null="${null}"
act_github_user_zachroofsec="zachroofsec"

# MISC ACT CLI flag configurations
act_server_primary_interface_override="${null}"
act_server_secondary_interface_override="${null}"
act_pull="${false}"
act_verbose_mode="${false}"

# ##############################################################################
# bb-* COMMAND CONFIGURATION
# ##############################################################################

# should_clear_bash_log: Should delete previous logs whenever bb-* commands are executed
should_clear_bash_log="${true}"
# bb_current_lab_guid_bash: The current lab that is being worked on
bb_current_lab_guid_bash="${null}"
# bb_site_clear_dir_path: If specified, will delete a dir path before starting up the local web server.  This can be useful if you're deleting the browser cache (e.g., /Users/[username]/Library/Caches/Google/Chrome Canary")
bb_site_clear_dir_path="${null}"
disable_check_lab_updates="${false}"

# ##############################################################################
# RUNNER
# ##############################################################################
runner_arch_x64_name="X64"
runner_arch_arm64_name="ARM64"

# ##############################################################################
# TOOLING
# ##############################################################################

security_tools_cosign_repo="sigstore/cosign"
security_tools_syft_repo="anchore/syft"
security_tools_grype_repo="anchore/grype"

# ##############################################################################
# LAB
# ##############################################################################

# solc_version: Needs to be synced with hardhat.config.ts solcVersion
# See hardhat.config.ts for upgrade instructions
solc_version="0.8.24"
