#!/usr/bin/env bash

# ##############################################################################
: << COMMENT

PURPOSE: "ssh" into lab environment
- View README.md's 'Workflows: Emulating The lab Environment' for more context
PREREQUISITES:
- Executing bb-act-no-cred/bb-act-cred
- Setting bb_current_lab_guid_bash
MNEMONIC:
- Block
- Bash
- lab

COMMENT
# ##############################################################################

# shellcheck source=./../../../packages/common/scripts/source-all.sh

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
# shellcheck source=./../shared.sh
. "${script_dir}/../shared.sh"

script_file_path="${null}"

#The while loop will continue as long as there are arguments to process.
while [[ $# -gt 0 ]]; do
  argument_name="${1}"
  case "${argument_name}" in
    --script-file-path=*) # OPTIONAL
      # If provided, will run script non-interactive mode and exit.
      # If not provided, will give an interactive bash prompt
      flag_name="$(get_cli_flag_name "${argument_name}")"
      flag_value="$(get_cli_flag_value "${argument_name}")"

      script_file_path="${flag_value}"
      log_debug "Setting ${flag_name} to: ${script_file_path}"
      ;;
    *)
      flag_name="$(get_cli_flag_name "${argument_name}")"
      die "${flag_name} is not a valid argument"
      ;;
  esac
  unset argument_name flag_value flag_name
  shift
done

main() {
  cd "${blockbash_root_dir_path}" || die "Couldn't cd into ${blockbash_root_dir_path}"

  if is_null "${bb_current_lab_guid_bash}"; then
    die "You must set bb_current_lab_guid_bash!  Please see the README.md's 'Workflows: Emulating The lab Environment' for more context."
  fi
  if ! does_file_exist "${run_time_vscode_devcontainer_file_path}"; then
    die "You must execute bb-act-no-cred or bb-act-cred before using this command!  Please see the README.md's 'Workflows: Emulating The lab Environment' for more context."
  fi
  update_path "${build_bin_dir_path}"

  devcontainer up --remove-existing-container --workspace-folder="${blockbash_root_dir_path}"

  local devcontainer_exec_flags=(
    exec
    --workspace-folder="${blockbash_root_dir_path}"
    bash
  )

  if is_null "${script_file_path}"; then
    devcontainer "${devcontainer_exec_flags[@]}"
  else
    devcontainer "${devcontainer_exec_flags[@]}" "-c" "cd ${container_repo_dir_path} && bash ${script_file_path}"
  fi

}

# https://unix.stackexchange.com/a/333204
# Pipes stderr to terminal (and log file)
exec 3>&1
main 2>&1 >&3 | tee -a "${bash_log_file_path}"
